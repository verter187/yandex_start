package main

import "fmt"

// Виды циклов в golang:
// 	Трёхкомпонентный циклов
// 	Бесконечный циклов
// 	Цикл с одним условием
// 	Цикл range

func main() {

	//Бесконечный цикл
	// Такой цикл чаще всего встречается в worker-паттерне: фрагмент кода должен
	// выполняться до завершения процесса или потока, пока не будет прерван внешним событием.
	var i = 0
	for {
		i++
		// fmt.Println(i)
		if i >= 15 {
			break
		}
	}

	// Трехкомпонентный цикл
	// 	i := 1 — инициализация (pre-действие): выполняется единожды при входе в scope цикла;
	// i < 10 — основное условие: пока условие true, итерации будут продолжаться;
	// i++ — post-действие: выполняется по завершении каждой итерации цикла.
	for i := 1; i < 16; i++ {
		// fmt.Println(i)
	}

	// Бесконечный трёхкомпонентный цикл №1
	i = 0
	for {
		i++
		// fmt.Println(i)
		if i >= 15 {
			break
		}
	}

	// Бесконечный трёхкомпонентный цикл №2
	// не пропускает lint
	// i = 0
	// for ; true; {
	// 	i++
	// 	fmt.Println(i)
	// 	if i >= 15 {
	// 		break
	// 	}
	// }

	// Компоненты цикла могут принимать более комплексный вид:
	for a, b := 5, 10; a < 10 && b < 20; a, b = a+1, b+2 {
		// fmt.Println(a, b)
	}

	// Цикл с одним условием
	i = 0
	for i < 15 {
		i++
		// fmt.Println(i)
	}

	// Цикл range
	var array = []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	for _, a := range array {
		fmt.Println(a)
	}
}
